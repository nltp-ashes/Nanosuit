---==================================================================================================================---
---                                                                                                                  ---
---    Original Author(s) : NLTP_ASHES                                                                               ---
---    Edited : N/A                                                                                                  ---
---    Date : 30/03/2025                                                                                             ---
---    License : Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)           ---
---                                                                                                                  ---
---    Script used to handle the Nanosuit mode selection UI.                                                         ---
---                                                                                                                  ---
---==================================================================================================================---

-- ---------------------------------------------------------------------------------------------------------------------
-- Constants, global variables and imported functions
-- ---------------------------------------------------------------------------------------------------------------------

-- Singleton
instance         = nil

-- Imports
armor_modes_enum = nanosuit_core.armor_modes_enum

-- ---------------------------------------------------------------------------------------------------------------------
-- General functions
-- ---------------------------------------------------------------------------------------------------------------------

--- Function called when pressing a key. If the correct key is pressed, it opens the radial menu and registers the UI.
--- @return nil
function on_key_press(dik)
    if dik ~= DIK_keys.DIK_V then
        return
    end

    hide_hud_inventory()

    if not instance then
        instance = UINanosuitMenu()
    end

    if instance and not instance:IsShown() then
        instance:ShowDialog(true)
        Register_UI("UINanosuitMenu", "nanosuit_ui_menu")
        utils_obj.play_sound([[nanosuit\menu_show]])
    end
end

-- ---------------------------------------------------------------------------------------------------------------------
-- Callbacks registration
-- ---------------------------------------------------------------------------------------------------------------------

--- Function used to register callbacks.
--- @return nil
function on_game_start()
    RegisterScriptCallback("on_key_press", on_key_press)
end

-- ---------------------------------------------------------------------------------------------------------------------
-- Menu UI Class
-- ---------------------------------------------------------------------------------------------------------------------

class "UINanosuitMenu"(arm.UIRadialMenu)

function UINanosuitMenu:__init() super()
    -- Override RadialMenu
    self.bg:InitTexture("ui_ns_mode_background")

    -- Options
    local opt_speed = arm.OptionData(armor_modes_enum.speed, "ui_ns_mode_" .. armor_modes_enum.speed)
    opt_speed:SetText({ title = "Speed", description = "Speed mode" })

    local opt_strength = arm.OptionData(armor_modes_enum.power, "ui_ns_mode_" .. armor_modes_enum.power)
    opt_strength:SetText({ title = "Strength", description = "Strength mode" })

    local opt_cloak = arm.OptionData(armor_modes_enum.cloak, "ui_ns_mode_" .. armor_modes_enum.cloak)
    opt_cloak:SetText({ title = "Cloak", description = "Cloak mode" })

    local opt_armor = arm.OptionData(armor_modes_enum.armor, "ui_ns_mode_" .. armor_modes_enum.armor)
    opt_armor:SetText({ title = "Armor", description = "Armor mode" })

    -- Add options to GUI
    self:AddOption(opt_speed)
    self:AddOption(opt_strength)
    self:AddOption(opt_cloak)
    self:AddOption(opt_armor)

    -- Register callbacks
    self:RegisterCallback(armor_modes_enum.speed, function(flags)
        nanosuit_utils.dbg_printf("[NS] Menu UI | Speed mode")
        nanosuit_core.get():change_mode(armor_modes_enum.speed)
        flags.close_gui = true
    end)

    self:RegisterCallback(armor_modes_enum.power, function(flags)
        nanosuit_utils.dbg_printf("[NS] Menu UI | Strength mode")
        nanosuit_core.get():change_mode(armor_modes_enum.power)
        flags.close_gui = true
    end)

    self:RegisterCallback(armor_modes_enum.cloak, function(flags)
        nanosuit_utils.dbg_printf("[NS] Menu UI | Cloak mode")
        nanosuit_core.get():change_mode(armor_modes_enum.cloak)
        flags.close_gui = true
    end)

    self:RegisterCallback(armor_modes_enum.armor, function(flags)
        nanosuit_utils.dbg_printf("[NS] Menu UI | Armor mode")
        nanosuit_core.get():change_mode(armor_modes_enum.armor)
        flags.close_gui = true
    end)

    self:DrawOptions()
end

function UINanosuitMenu:Close()
    self:HideDialog()
    Unregister_UI("UINanosuitMenu")
    utils_obj.play_sound([[nanosuit\menu_hide]])
end